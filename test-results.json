{
  "summary": {
    "timestamp": "2025-09-22T10:55:35.154Z",
    "totalDuration": 2215,
    "total": 6,
    "passed": 4,
    "failed": 2,
    "skipped": 0,
    "successRate": 67
  },
  "testSuites": [
    {
      "name": "Setup Tests",
      "status": "PASS",
      "duration": 14,
      "details": "Completed successfully"
    },
    {
      "name": "Authentication Tests",
      "status": "FAIL",
      "duration": 2000,
      "details": "\ntests/auth.test.ts:\n(pass) Authentication System > JWT Utilities > should generate valid JWT tokens [25.00ms]\n(pass) Authentication System > JWT Utilities > should reject invalid tokens [1.00ms]\n(pass) Authentication System > JWT Utilities > should extract tokens from authorization headers\n(pass) Authentication System > Password Utilities > should hash and verify passwords correctly [651.01ms]\n(pass) Authentication System > Password Utilities > should validate password strength\n(pass) Authentication System > User Service > should register a new user [240.00ms]\n(pass) Authentication System > User Service > should reject registration with duplicate email\n(pass) Authentication System > User Service > should login with valid credentials [426.00ms]\n(pass) Authentication System > User Service > should reject login with invalid credentials\n179 |     });\n180 |   });\n181 | \n182 |   describe(\"Authentication Schemas\", () => {\n183 |     it(\"should validate registration data\", () => {\n184 |       const { registerSchema } = require(\"../src/schemas/auth.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/auth.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts:184:15)\n(fail) Authentication System > Authentication Schemas > should validate registration data\n189 |       expect(result.success).toBe(true);\n190 |       expect(result.data?.email).toBe(validData.email);\n191 |     });\n192 | \n193 |     it(\"should reject invalid registration data\", () => {\n194 |       const { registerSchema } = require(\"../src/schemas/auth.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/auth.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts:194:15)\n(fail) Authentication System > Authentication Schemas > should reject invalid registration data [1.00ms]\n204 |       expect(result.success).toBe(false);\n205 |       expect(result.error?.errors.length).toBeGreaterThan(0);\n206 |     });\n207 | \n208 |     it(\"should validate login data\", () => {\n209 |       const { loginSchema } = require(\"../src/schemas/auth.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/auth.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/auth.test.ts:209:15)\n(fail) Authentication System > Authentication Schemas > should validate login data\n(pass) Authentication Integration > should handle complete registration flow [212.00ms]\n(pass) Authentication Integration > should handle complete login flow [428.00ms]\n\n 11 pass\n 3 fail\n 40 expect() calls\nRan 14 tests across 1 file. [1.99s]\n"
    },
    {
      "name": "Document Management Tests",
      "status": "FAIL",
      "duration": 69,
      "details": "\ntests/documents.test.ts:\n(pass) Document Management System > Document Service > should upload a document successfully [16.00ms]\n(pass) Document Management System > Document Service > should get document with proper permissions [2.00ms]\n(pass) Document Management System > Document Service > should deny access to unauthorized document\n(pass) Document Management System > Document Service > should search documents with filters\n(pass) Document Management System > Document Service > should update document metadata\n(pass) Document Management System > Document Service > should generate download link [1.00ms]\n{\"timestamp\":\"2025-09-22T10:55:34.984Z\",\"level\":\"ERROR\",\"message\":\"Failed to update document permissions\",\"meta\":{\"error\":{},\"documentId\":\"test-doc-id\"}}\n303 |         \"test-doc-id\",\n304 |         permissions,\n305 |         \"test-user-id\"\n306 |       );\n307 | \n308 |       expect(result.success).toBe(true);\n                                   ^\nerror: expect(received).toBe(expected)\n\nExpected: true\nReceived: false\n\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts:308:30)\n(fail) Document Management System > Document Service > should manage document permissions [9.00ms]\n(pass) Document Management System > Document Service > should delete document\n(pass) Document Management System > Document Repository > should implement CRUD operations [24.00ms]\n(pass) Document Management System > Document Repository > should validate search filters\n381 |     });\n382 |   });\n383 | \n384 |   describe(\"Document Schemas\", () => {\n385 |     it(\"should validate document upload data\", () => {\n386 |       const { DocumentUploadSchema } = require(\"../src/schemas/document.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/document.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts:386:15)\n(fail) Document Management System > Document Schemas > should validate document upload data\n395 |       const result = DocumentUploadSchema.safeParse(validData);\n396 |       expect(result.success).toBe(true);\n397 |     });\n398 | \n399 |     it(\"should validate document search parameters\", () => {\n400 |       const { DocumentSearchSchema } = require(\"../src/schemas/document.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/document.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts:400:15)\n(fail) Document Management System > Document Schemas > should validate document search parameters [1.00ms]\n414 |       expect(result.data?.page).toBe(1);\n415 |       expect(result.data?.limit).toBe(10);\n416 |     });\n417 | \n418 |     it(\"should validate permission data\", () => {\n419 |       const { DocumentPermissionSchema } = require(\"../src/schemas/document.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/document.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts:419:15)\n(fail) Document Management System > Document Schemas > should validate permission data\n426 |       const result = DocumentPermissionSchema.safeParse(validData);\n427 |       expect(result.success).toBe(true);\n428 |     });\n429 | \n430 |     it(\"should reject invalid permission data\", () => {\n431 |       const { DocumentPermissionSchema } = require(\"../src/schemas/document.schemas\");\n                    ^\nResolveMessage: Cannot find module '../src/schemas/document.schemas' from '/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts'\n      at <anonymous> (/home/haya-noor/Headless-Document-Management-System/tests/documents.test.ts:431:15)\n(fail) Document Management System > Document Schemas > should reject invalid permission data\n(pass) Document Management System > Document Versioning > should create document versions\n(pass) Document Management System > Document Versioning > should validate version data\n(pass) Document Management System > Document Permissions > should manage permissions correctly [1.00ms]\n(pass) Document Management System > Document Permissions > should validate permission types\n\n 13 pass\n 5 fail\n 42 expect() calls\nRan 18 tests across 1 file. [65.00ms]\n"
    },
    {
      "name": "Storage Tests",
      "status": "PASS",
      "duration": 29,
      "details": "Completed successfully"
    },
    {
      "name": "Repository Tests",
      "status": "PASS",
      "duration": 55,
      "details": "Completed successfully"
    },
    {
      "name": "API Integration Tests",
      "status": "PASS",
      "duration": 47,
      "details": "Completed successfully"
    }
  ],
  "environment": {
    "runtime": "bun",
    "nodeEnv": "development",
    "platform": "linux",
    "arch": "x64"
  }
}